name: Release Datapack

on:
  workflow_dispatch: # Triggered manually

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full commit history for changelog

      - name: Get Version and Calculate Next
        id: version
        run: |
          current_version=$(cat version.txt)
          echo "current_version=$current_version" >> $GITHUB_ENV

          # Parse version components (major.minor.patch)
          IFS='.' read -r major minor patch <<< "$current_version"
          
          # Increment version based on patch
          if [ "$patch" -lt 9 ]; then
              patch=$((patch + 1))
          elif [ "$minor" -lt 9 ]; then
              minor=$((minor + 1))
              patch=0
          else
              major=$((major + 1))
              minor=0
              patch=0
          fi
          
          next_version="$major.$minor.$patch"
          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        run: |
          # Get commits since the last tag
          commits=$(git log --pretty=format:'- %s (%h)' `git describe --tags --abbrev=0`..HEAD -- data/cobblemon/spawn_pool_world/) 
          echo "changelog=$commits" >> $GITHUB_ENV

      - name: Run PackSquash
        uses: ComunidadAylas/PackSquash-action@v4
        with:
          artifact_name: '[UNZIP ME] MythsandLegends-Datapack-v${{ env.next_version }}'
          packsquash_version: latest
          options: |
            pack_directory = '.'
            allow_mods = ['OptiFine']

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: '[UNZIP ME] MythsandLegends-Datapack-v${{ env.next_version }}'
          path: '[UNZIP ME] MythsandLegends-Datapack-v${{ env.next_version }}.zip'

  release:
    runs-on: ubuntu-latest
    needs: build   # Ensure build is completed before release

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full commit history for changelog

      - name: Get Version and Calculate Next
        id: version
        run: |
          current_version=$(cat version.txt)
          echo "current_version=$current_version" >> $GITHUB_ENV

          # Parse version components (major.minor.patch)
          IFS='.' read -r major minor patch <<< "$current_version"
          
          # Increment version based on patch
          if [ "$patch" -lt 9 ]; then
              patch=$((patch + 1))
          elif [ "$minor" -lt 9 ]; then
              minor=$((minor + 1))
              patch=0
          else
              major=$((major + 1))
              minor=0
              patch=0
          fi
          
          next_version="$major.$minor.$patch"
          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        run: |
          # Get commits since the last tag
          commits=$(git log --pretty=format:'- %s (%h)' `git describe --tags --abbrev=0`..HEAD -- data/cobblemon/spawn_pool_world/) 
          echo "changelog=$commits" >> $GITHUB_ENV

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: '[UNZIP ME] MythsandLegends-Datapack-v${{ env.next_version }}'
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.next_version }}
          name: MythsandLegends Datapack v${{ env.next_version }}
          body: |
            **Changelog:**

            ${{ env.changelog }}
          draft: false
          prerelease: false
          files: '[UNZIP ME] MythsandLegends-Datapack-v${{ env.next_version }}.zip'

      - name: Bump Version
        run: echo ${{ env.next_version }} > version.txt

      - name: Commit and Push Version Bump
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add version.txt
          git commit -m "Bump version to ${{ env.next_version }}"
          git push
