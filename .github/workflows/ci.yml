# This is a CI (continuous integration) workflow for Minecraft datapacks.
# The purpose of CI is to try to catch bugs before they make it into a release.
# If you are using Visual Studio Code, I suggest using SpyglassMC's language tools to do a similar thing. https://github.com/SpyglassMC/Spyglass
# You can check out the indvidual actions on their respective GitHub pages.
# For those who have used GitHub Actions before, notice how there is an extra complile and upload step.
# This is due to how the build-main job checks for errors. Instead of using a script,
# such as, /gradlew build, with this being a datapack, it checks the source files instead. (see Check commands and Check JSON.)
# This is completely intentional, please do not create a PR changing it!

name: CI

on:
  push:
    branches:
      - master
    paths:
      - 'data/cobblemon/spawn_pool_world/**'
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      # Checks mcfunction files for errors
      - name: Check commands
        uses: mcbeet/check-commands@v1
        with:
          source: .
          minecraft: "1.20"
      # Checks JSON for errors
      - name: Check JSON
        uses: ocular-d/json-linter@0.0.2

      - name: Generate/Update Version
        id: versioning
        run: |
          CURRENT_VERSION=$(cat version.txt)
          NEW_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{print $1 "." $2 "." ($3 + 1)}')  # Increment PATCH version
          echo "$NEW_VERSION" > version.txt
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT

      - name: Commit Version Change
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add version.txt
          git commit -m "Update version to ${{ steps.versioning.outputs.version }}" 

      - name: Generate Changelog
        id: changelog
        run: |
          echo "changelog=$(git log --pretty=format:'- %h %s (%an)' --reverse HEAD^..HEAD)" >> $GITHUB_OUTPUT 

      - name: Compile and upload
        uses: actions/upload-artifact@v4
        with:
          name: MythsandLegends-Datapack
          path: |
            data/
            pack.mcmeta
            pack.png
            version.txt  # Include version file
          if-no-files-found: error

  build-packsquash:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run PackSquash
        uses: ComunidadAylas/PackSquash-action@v4
        with:
          artifact_name: '[UNZIP ME] MythsandLegends-Datapack'
          packsquash_version: latest
          options: |
            pack_directory = '.'
            allow_mods = ['OptiFine']